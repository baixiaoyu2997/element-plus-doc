import type { TagDoc } from '@/types/tag-doc';
const doc: TagDoc.TagDocInstance = {
  url: 'component/message-box.html',
  attributes: [
    {
      name: 'autofocus',
      description: { cn: '打开 MessageBox 时是否自动获得焦点', en: 'auto focus when open MessageBox' },
      type: 'boolean',
      default: 'true',
      value: [],
    },
    {
      name: 'title',
      description: { cn: 'MessageBox 的标题', en: 'title of the MessageBox' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'message',
      description: { cn: 'MessageBox 的正文内容', en: 'content of the MessageBox' },
      type: ['string', 'VNode'],
      default: 'VNode',
      value: [],
    },
    {
      name: 'dangerouslyUseHTMLString',
      description: { cn: '是否将 `message` 作为 HTML 片段处理', en: 'whether <code>message</code> is treated as HTML string' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'type',
      description: { cn: '消息类型，用于图标显示', en: 'message type, used for icon display' },
      type: 'enum',
      default: "'warning'",
      value: ['success', 'warning', 'info', 'error'],
    },
    {
      name: 'icon',
      description: { cn: '自定义图标，该属性会覆盖 `type` 的图标。', en: 'custom icon component, overrides <code>type</code>' },
      type: ['string', 'Component'],
      default: '—',
      value: [],
    },
    {
      name: 'custom-class',
      description: { cn: 'MessageBox 的自定义类名', en: 'custom class name for MessageBox' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'custom-style',
      description: { cn: 'MessageBox 的自定义内联样式', en: 'custom inline style for MessageBox' },
      type: 'CSSProperties',
      default: '—',
      value: [],
    },
    {
      name: 'callback',
      description: {
        cn: "若不使用 Promise，可以使用此参数指定 MessageBox 关闭后的回调 (function(action, instance)，action 的值为'confirm', 'cancel'或'close', instance 为 MessageBox 实例， 可以通过它访问实例上的属性和方法)",
        en: "MessageBox closing callback if you don't prefer Promise. (function(action, instance), where action can be 'confirm', 'cancel' or 'close', and instance is the MessageBox instance. You can access to that instance's attributes and methods)",
      },
      type: 'function(action, instance)',
      default: '—',
      value: [],
    },
    {
      name: 'show-close',
      description: { cn: 'MessageBox 是否显示右上角关闭按钮', en: 'whether to show close icon of MessageBox' },
      type: 'boolean',
      default: 'true',
      value: [],
    },
    {
      name: 'before-close',
      description: {
        cn: "messageBox 关闭前的回调，会暂停消息弹出框的关闭过程。(function(action, instance, done)，action的值为'confirm', 'cancel'或'close'；instance为 MessageBox 实例，可以通过它访问实例上的属性和方法；done用于关闭 MessageBox 实例)",
        en: "callback before MessageBox closes, and it will prevent MessageBox from closing. (function(action, instance, done), where action can be 'confirm', 'cancel' or 'close'; instance is the MessageBox instance, and you can access to that instance's attributes and methods; done is for closing the instance)",
      },
      type: 'function(action, instance, done)',
      default: '—',
      value: [],
    },
    {
      name: 'distinguish-cancel-and-close',
      description: {
        cn: '是否将取消（点击取消按钮）与关闭（点击关闭按钮或遮罩层、按下 Esc 键）进行区分',
        en: 'whether to distinguish canceling and closing the MessageBox',
      },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'lock-scroll',
      description: { cn: '是否在 MessageBox 出现时将 body 滚动锁定', en: 'whether to lock body scroll when MessageBox prompts' },
      type: 'boolean',
      default: 'true',
      value: [],
    },
    {
      name: 'show-cancel-button',
      description: {
        cn: '是否显示取消按钮. （以 confirm 和 prompt 方式调用时为 true）',
        en: 'whether to show a cancel button. (true when called with confirm and prompt)',
      },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'show-confirm-button',
      description: { cn: '是否显示确定按钮', en: 'whether to show a confirm button' },
      type: 'boolean',
      default: 'true',
      value: [],
    },
    {
      name: 'cancel-button-text',
      description: { cn: '取消按钮的文本内容', en: 'text content of cancel button' },
      type: 'string',
      default: 'Cancel',
      value: [],
    },
    {
      name: 'confirm-button-text',
      description: { cn: '确定按钮的文本内容', en: 'text content of confirm button' },
      type: 'string',
      default: 'OK',
      value: [],
    },
    {
      name: 'cancel-button-class',
      description: { cn: '取消按钮的自定义类名', en: 'custom class name of cancel button' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'confirm-button-class',
      description: { cn: '确定按钮的自定义类名', en: 'custom class name of confirm button' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'close-on-click-modal',
      description: {
        cn: '是否可通过点击遮罩层关闭 MessageBox. （以 alert 方式调用时为 false）',
        en: 'whether MessageBox can be closed by clicking the mask. (false when called with alert)',
      },
      type: 'boolean',
      default: 'true',
      value: [],
    },
    {
      name: 'close-on-press-escape',
      description: {
        cn: '是否可通过按下 ESC 键关闭 MessageBox. （以 alert 方式调用时为 false）',
        en: 'whether MessageBox can be closed by pressing the ESC. (false when called with alert)',
      },
      type: 'boolean',
      default: 'true',
      value: [],
    },
    {
      name: 'close-on-hash-change',
      description: { cn: '是否在 hash 改变时关闭 MessageBox', en: 'whether to close MessageBox when hash changes' },
      type: 'boolean',
      default: 'true',
      value: [],
    },
    {
      name: 'show-input',
      description: { cn: '是否显示输入框.（以 prompt 方式调用时为 true）', en: 'whether to show an input.(true when called with prompt)' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'input-placeholder',
      description: { cn: '输入框占位文本', en: 'placeholder of input' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'input-type',
      description: { cn: '输入框的类型', en: 'type of input' },
      type: 'string',
      default: 'text',
      value: [],
    },
    {
      name: 'input-value',
      description: { cn: '输入框的初始文本', en: 'initial value of input' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'input-pattern',
      description: { cn: '输入框的校验表达式', en: 'regexp for the input' },
      type: 'regexp',
      default: '—',
      value: [],
    },
    {
      name: 'input-validator',
      description: {
        cn: '输入框的校验函数。 应该返回一个 boolean 或者 string， 如果返回的是一个 string 类型，那么该返回值会被赋值给 inputErrorMessage 用于向用户展示错误消息。',
        en: 'validation function for the input. Should returns a boolean or string. If a string is returned, it will be assigned to inputErrorMessage',
      },
      type: 'function',
      default: '—',
      value: [],
    },
    {
      name: 'input-error-message',
      description: { cn: '校验未通过时的提示文本', en: 'error message when validation fails' },
      type: 'string',
      default: 'Illegal input',
      value: [],
    },
    {
      name: 'center',
      description: { cn: '是否居中布局', en: 'whether to align the content in center' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'draggable',
      description: { cn: 'MessageBox 是否可拖放', en: 'whether MessageBox is draggable' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'round-button',
      description: { cn: '是否使用圆角按钮', en: 'whether to use round button' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'button-size',
      description: { cn: '自定义确认按钮及取消按钮的大小', en: 'custom size of confirm and cancel buttons' },
      type: 'enum',
      default: 'default',
      value: ['small', 'default', 'large'],
    },
    {
      name: 'append-to',
      description: { cn: '设置组件的根元素', en: 'set the root element for the message box' },
      type: 'HTMLElement',
      default: '—',
      value: [],
    },
  ],
};
export default doc;
