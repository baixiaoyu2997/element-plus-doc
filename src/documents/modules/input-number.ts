import type { TagDoc } from '@/types/tag-doc';
const doc: TagDoc.TagDocInstance = {
  url: 'component/input-number.html',
  attributes: [
    {
      name: 'model-value',
      description: { cn: '选中项绑定值', en: 'binding value' },
      type: 'number',
      default: '—',
      value: [],
    },
    {
      name: 'min',
      description: { cn: '设置计数器允许的最小值', en: 'the minimum allowed value' },
      type: 'number',
      default: '-Infinity',
      value: [],
    },
    {
      name: 'max',
      description: { cn: '设置计数器允许的最大值', en: 'the maximum allowed value' },
      type: 'number',
      default: 'Infinity',
      value: [],
    },
    {
      name: 'step',
      description: { cn: '计数器步长', en: 'incremental step' },
      type: 'number',
      default: '1',
      value: [],
    },
    {
      name: 'step-strictly',
      description: { cn: '是否只能输入 step 的倍数', en: 'whether input value can only be multiple of step' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'precision',
      description: { cn: '数值精度', en: 'precision of input value' },
      type: 'number',
      default: '—',
      value: [],
    },
    {
      name: 'size',
      description: { cn: '计数器尺寸', en: 'size of the component' },
      type: 'enum',
      default: "'default'",
      value: ['large', 'default', 'small'],
    },
    {
      name: 'readonly',
      description: { cn: '原生 `readonly` 属性，是否只读', en: 'same as `readonly` in native input' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'disabled',
      description: { cn: '是否禁用状态', en: 'whether the component is disabled' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'controls',
      description: { cn: '是否使用控制按钮', en: 'whether to enable the control buttons' },
      type: 'boolean',
      default: 'true',
      value: [],
    },
    {
      name: 'controls-position',
      description: { cn: '控制按钮位置', en: 'position of the control buttons' },
      type: 'enum',
      default: "'right'",
      value: ['', 'right'],
    },
    {
      name: 'name',
      description: { cn: '等价于原生 input `name` 属性', en: 'same as `name` in native input' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'label',
      description: { cn: '等价于原生 input `label` 属性', en: 'same as `label` in native input' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'placeholder',
      description: { cn: '等价于原生 input `placeholder` 属性', en: 'same as `placeholder` in native input' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'id',
      description: { cn: '等价于原生 input `id` 属性', en: 'same as `id` in native input' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'value-on-clear',
      description: { cn: '当输入框被清空时显示的值', en: 'value should be set when input box is cleared' },
      type: ['number', 'enum'],
      default: "'max'",
      value: ['min', 'max', null],
    },
    {
      name: 'validate-event',
      description: { cn: '是否触发表单验证', en: 'whether to trigger form validation' },
      type: 'boolean',
      default: 'true',
      value: [],
    },
  ],
  events: [
    {
      name: 'change',
      description: { cn: '绑定值被改变时触发', en: 'triggers when the value changes' },
      type: 'function',
      param: '(currentValue: number &#124; undefined, oldValue: number &#124; undefined) =&gt; void',
    },
    {
      name: 'blur',
      description: { cn: '在组件 Input 失去焦点时触发', en: 'triggers when Input blurs' },
      type: 'function',
      param: '(event: FocusEvent) =&gt; void',
    },
    {
      name: 'focus',
      description: { cn: '在组件 Input 获得焦点时触发', en: 'triggers when Input focuses' },
      type: 'function',
      param: '(event: FocusEvent) =&gt; void',
    },
  ],
  exposes: [
    {
      name: 'focus',
      description: { cn: '使 input 组件获得焦点', en: 'get focus the input component' },
      type: 'function',
      param: '() =&gt; void',
    },
    {
      name: 'blur',
      description: { cn: '使 input 组件失去焦点', en: 'remove focus the input component' },
      type: 'function',
      param: '() =&gt; void',
    },
  ],
};
export default doc;
