import type { TagDoc } from '@/types/tag-doc';
const doc: TagDoc.TagDocInstance = {
  url: 'component/slider.html',
  attributes: [
    {
      name: 'model-value',
      description: { cn: '选中项绑定值', en: 'binding value' },
      type: 'number',
      default: '0',
      value: [],
    },
    {
      name: 'min',
      description: { cn: '最小值', en: 'minimum value' },
      type: 'number',
      default: '0',
      value: [],
    },
    {
      name: 'max',
      description: { cn: '最大值', en: 'maximum value' },
      type: 'number',
      default: '100',
      value: [],
    },
    {
      name: 'disabled',
      description: { cn: '是否禁用', en: 'whether Slider is disabled' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'step',
      description: { cn: '步长', en: 'step size' },
      type: 'number',
      default: '1',
      value: [],
    },
    {
      name: 'show-input',
      description: {
        cn: '是否显示输入框，仅在非范围选择时有效',
        en: 'whether to display an input box, works when <code>range</code> is false',
      },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'show-input-controls',
      description: {
        cn: '在显示输入框的情况下，是否显示输入框的控制按钮',
        en: 'whether to display control buttons when <code>show-input</code> is true',
      },
      type: 'boolean',
      default: 'true',
      value: [],
    },
    {
      name: 'size',
      description: { cn: 'slider 包装器的大小，垂直模式下该属性不可用', en: 'size of the slider wrapper, will not work in vertical mode' },
      type: 'enum',
      default: "'default'",
      value: ['large', 'default', 'small'],
    },
    {
      name: 'input-size',
      description: {
        cn: '输入框的大小，如果设置了 `size` 属性，默认值自动取 `size`',
        en: 'size of the input box, when set <code>size</code>, the default is the value of <code>size</code>',
      },
      type: 'enum',
      default: 'default',
      value: ['large', 'default', 'small'],
    },
    {
      name: 'show-stops',
      description: { cn: '是否显示间断点', en: 'whether to display breakpoints' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'show-tooltip',
      description: { cn: '是否显示提示信息', en: 'whether to display tooltip value' },
      type: 'boolean',
      default: 'true',
      value: [],
    },
    {
      name: 'format-tooltip',
      description: { cn: '格式化提示信息', en: 'format to display tooltip value' },
      type: 'function(value)',
      default: '—',
      value: [],
    },
    {
      name: 'range',
      description: { cn: '是否开启选择范围', en: 'whether to select a range' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'vertical',
      description: { cn: '垂直模式', en: 'vertical mode' },
      type: 'boolean',
      default: 'false',
      value: [],
    },
    {
      name: 'height',
      description: { cn: '滑块高度，垂直模式必填', en: 'Slider height, required in vertical mode' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'label',
      description: { cn: '屏幕阅读器标签', en: 'label for screen reader' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'range-start-label',
      description: {
        cn: '当 `range` 为true时，屏幕阅读器标签开始的标记',
        en: 'when <code>range</code> is true, screen reader label for the start of the range',
      },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'range-end-label',
      description: {
        cn: '当 `range` 为true时，屏幕阅读器标签结尾的标记',
        en: 'when <code>range</code> is true, screen reader label for the end of the range',
      },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'format-value-text',
      description: {
        cn: '显示屏幕阅读器的 `aria-valuenow` 属性的格式',
        en: 'format to display the <code>aria-valuenow</code> attribute for screen readers',
      },
      type: 'function(value)',
      default: '—',
      value: [],
    },
    {
      name: 'debounce',
      description: {
        cn: '输入时的去抖延迟，毫秒，仅在 `show-input` 等于 true 时有效',
        en: 'debounce delay when typing, in milliseconds, works when <code>show-input</code> is true',
      },
      type: 'number',
      default: '300',
      value: [],
    },
    {
      name: 'tooltip-class',
      description: { cn: 'tooltip 的自定义类名', en: 'custom class name for the tooltip' },
      type: 'string',
      default: '—',
      value: [],
    },
    {
      name: 'placement',
      description: { cn: 'Tooltip 出现的位置', en: 'position of Tooltip' },
      type: 'string',
      default: 'top',
      value: ['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end'],
    },
    {
      name: 'marks',
      description: {
        cn: '标记， key 的类型必须为 `number` 且取值在闭区间 `[min, max]` 内，每个标记可以单独设置样式',
        en: 'marks, type of key must be <code>number</code> and must in closed interval <code>[min, max]</code>, each mark can custom style',
      },
      type: 'object',
      default: '—',
      value: [],
    },
    {
      name: 'validate-event',
      description: { cn: '输入时是否触发表单的校验', en: 'whether to trigger form validation' },
      type: 'boolean',
      default: 'true',
      value: [],
    },
  ],
  events: [
    {
      name: 'change',
      description: {
        cn: '值改变时触发（使用鼠标拖曳时，只在松开鼠标后触发）',
        en: 'triggers when the value changes (if the mouse is being dragged, this event only fires when the mouse is released)',
      },
      type: 'function',
      param: 'val，新状态的值',
    },
    {
      name: 'input',
      description: {
        cn: '数据改变时触发（使用鼠标拖曳时，活动过程实时触发）',
        en: "triggers when the data changes (It'll be emitted in real time during sliding)",
      },
      type: 'function',
      param: 'val，改变后的值',
    },
  ],
};
export default doc;
